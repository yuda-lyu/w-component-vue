const d="function"==typeof Buffer,l="function"==typeof TextDecoder?new TextDecoder:void 0,I=("function"==typeof TextEncoder&&new TextEncoder,Array.prototype.slice.call("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=")),c=(d=>{let l={};return I.forEach(((d,I)=>l[d]=I)),l})(),i=/^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/,m=String.fromCharCode.bind(String),Z="function"==typeof Uint8Array.from?Uint8Array.from.bind(Uint8Array):d=>new Uint8Array(Array.prototype.slice.call(d,0)),b=d=>d.replace(/[^A-Za-z0-9\+\/]/g,""),X=d=>{let l,c,i,m,Z="";const b=d.length%3;for(let b=0;b<d.length;){if((c=d.charCodeAt(b++))>255||(i=d.charCodeAt(b++))>255||(m=d.charCodeAt(b++))>255)throw new TypeError("invalid character found");l=c<<16|i<<8|m,Z+=I[l>>18&63]+I[l>>12&63]+I[l>>6&63]+I[63&l]}return b?Z.slice(0,b-3)+"===".substring(b):Z},C=/[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g,y=d=>{switch(d.length){case 4:var l=((7&d.charCodeAt(0))<<18|(63&d.charCodeAt(1))<<12|(63&d.charCodeAt(2))<<6|63&d.charCodeAt(3))-65536;return m(55296+(l>>>10))+m(56320+(1023&l));case 3:return m((15&d.charCodeAt(0))<<12|(63&d.charCodeAt(1))<<6|63&d.charCodeAt(2));default:return m((31&d.charCodeAt(0))<<6|63&d.charCodeAt(1))}},g=d=>d.replace(C,y),n=d=>{if(d=d.replace(/\s+/g,""),!i.test(d))throw new TypeError("malformed base64.");d+="==".slice(2-(3&d.length));let l,I,Z,b="";for(let i=0;i<d.length;)l=c[d.charAt(i++)]<<18|c[d.charAt(i++)]<<12|(I=c[d.charAt(i++)])<<6|(Z=c[d.charAt(i++)]),b+=64===I?m(l>>16&255):64===Z?m(l>>16&255,l>>8&255):m(l>>16&255,l>>8&255,255&l);return b},p="function"==typeof atob?d=>atob(b(d)):d?d=>Buffer.from(d,"base64").toString("binary"):n,t=d?d=>Z(Buffer.from(d,"base64")):d=>Z(p(d).split("").map((d=>d.charCodeAt(0)))),W=d?d=>Buffer.from(d,"base64").toString("utf8"):l?d=>l.decode(t(d)):d=>g(p(d)),V=d=>b(d.replace(/[-_]/g,(d=>"-"==d?"+":"/"))),u=d=>W(V(d)),G=u;var o={};!function(d){var l=Object.prototype.hasOwnProperty,I="~";function c(){}function i(d,l,I){this.fn=d,this.context=l,this.once=I||!1}function m(d,l,c,m,Z){if("function"!=typeof c)throw new TypeError("The listener must be a function");var b=new i(c,m||d,Z),X=I?I+l:l;return d._events[X]?d._events[X].fn?d._events[X]=[d._events[X],b]:d._events[X].push(b):(d._events[X]=b,d._eventsCount++),d}function Z(d,l){0==--d._eventsCount?d._events=new c:delete d._events[l]}function b(){this._events=new c,this._eventsCount=0}Object.create&&(c.prototype=Object.create(null),(new c).__proto__||(I=!1)),b.prototype.eventNames=function(){var d,c,i=[];if(0===this._eventsCount)return i;for(c in d=this._events)l.call(d,c)&&i.push(I?c.slice(1):c);return Object.getOwnPropertySymbols?i.concat(Object.getOwnPropertySymbols(d)):i},b.prototype.listeners=function(d){var l=I?I+d:d,c=this._events[l];if(!c)return[];if(c.fn)return[c.fn];for(var i=0,m=c.length,Z=new Array(m);i<m;i++)Z[i]=c[i].fn;return Z},b.prototype.listenerCount=function(d){var l=I?I+d:d,c=this._events[l];return c?c.fn?1:c.length:0},b.prototype.emit=function(d,l,c,i,m,Z){var b=I?I+d:d;if(!this._events[b])return!1;var X,C,y=this._events[b],g=arguments.length;if(y.fn){switch(y.once&&this.removeListener(d,y.fn,void 0,!0),g){case 1:return y.fn.call(y.context),!0;case 2:return y.fn.call(y.context,l),!0;case 3:return y.fn.call(y.context,l,c),!0;case 4:return y.fn.call(y.context,l,c,i),!0;case 5:return y.fn.call(y.context,l,c,i,m),!0;case 6:return y.fn.call(y.context,l,c,i,m,Z),!0}for(C=1,X=new Array(g-1);C<g;C++)X[C-1]=arguments[C];y.fn.apply(y.context,X)}else{var n,p=y.length;for(C=0;C<p;C++)switch(y[C].once&&this.removeListener(d,y[C].fn,void 0,!0),g){case 1:y[C].fn.call(y[C].context);break;case 2:y[C].fn.call(y[C].context,l);break;case 3:y[C].fn.call(y[C].context,l,c);break;case 4:y[C].fn.call(y[C].context,l,c,i);break;default:if(!X)for(n=1,X=new Array(g-1);n<g;n++)X[n-1]=arguments[n];y[C].fn.apply(y[C].context,X)}}return!0},b.prototype.on=function(d,l,I){return m(this,d,l,I,!1)},b.prototype.once=function(d,l,I){return m(this,d,l,I,!0)},b.prototype.removeListener=function(d,l,c,i){var m=I?I+d:d;if(!this._events[m])return this;if(!l)return Z(this,m),this;var b=this._events[m];if(b.fn)b.fn!==l||i&&!b.once||c&&b.context!==c||Z(this,m);else{for(var X=0,C=[],y=b.length;X<y;X++)(b[X].fn!==l||i&&!b[X].once||c&&b[X].context!==c)&&C.push(b[X]);C.length?this._events[m]=1===C.length?C[0]:C:Z(this,m)}return this},b.prototype.removeAllListeners=function(d){var l;return d?(l=I?I+d:d,this._events[l]&&Z(this,l)):(this._events=new c,this._eventsCount=0),this},b.prototype.off=b.prototype.removeListener,b.prototype.addListener=b.prototype.on,b.prefixed=I,b.EventEmitter=b,d.exports=b}({get exports(){return o},set exports(d){o=d}});var h=o;let e;!function(){if("browser"!==("undefined"!=typeof window&&void 0!==window.document?"browser":"nodejs"))return null;let d=G("CgoKInVzZSBzdHJpY3QiO2Z1bmN0aW9uIHQocil7cmV0dXJuIHQ9ImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmInN5bWJvbCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24odCl7cmV0dXJuIHR5cGVvZiB0fTpmdW5jdGlvbih0KXtyZXR1cm4gdCYmImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmdC5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmdCE9PVN5bWJvbC5wcm90b3R5cGU/InN5bWJvbCI6dHlwZW9mIHR9LHQocil9ZnVuY3Rpb24gcihyKXt2YXIgZT1mdW5jdGlvbihyLGUpe2lmKCJvYmplY3QiIT09dChyKXx8bnVsbD09PXIpcmV0dXJuIHI7dmFyIG49cltTeW1ib2wudG9QcmltaXRpdmVdO2lmKHZvaWQgMCE9PW4pe3ZhciBvPW4uY2FsbChyLGV8fCJkZWZhdWx0Iik7aWYoIm9iamVjdCIhPT10KG8pKXJldHVybiBvO3Rocm93IG5ldyBUeXBlRXJyb3IoIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuIil9cmV0dXJuKCJzdHJpbmciPT09ZT9TdHJpbmc6TnVtYmVyKShyKX0ociwic3RyaW5nIik7cmV0dXJuInN5bWJvbCI9PT10KGUpP2U6U3RyaW5nKGUpfWZ1bmN0aW9uIGUodCxlLG4pe3JldHVybihlPXIoZSkpaW4gdD9PYmplY3QuZGVmaW5lUHJvcGVydHkodCxlLHt2YWx1ZTpuLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwfSk6dFtlXT1uLHR9dmFyIG49QXJyYXkuaXNBcnJheSxvPSJvYmplY3QiPT10eXBlb2YgZ2xvYmFsJiZnbG9iYWwmJmdsb2JhbC5PYmplY3Q9PT1PYmplY3QmJmdsb2JhbCx1PSJvYmplY3QiPT10eXBlb2Ygc2VsZiYmc2VsZiYmc2VsZi5PYmplY3Q9PT1PYmplY3QmJnNlbGYsYz1vfHx1fHxGdW5jdGlvbigicmV0dXJuIHRoaXMiKSgpLGk9Yy5TeW1ib2wsYT1PYmplY3QucHJvdG90eXBlLGY9YS5oYXNPd25Qcm9wZXJ0eSxsPWEudG9TdHJpbmcscz1pP2kudG9TdHJpbmdUYWc6dm9pZCAwO3ZhciBwPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7dmFyIGI9IltvYmplY3QgTnVsbF0iLHk9IltvYmplY3QgVW5kZWZpbmVkXSIsdj1pP2kudG9TdHJpbmdUYWc6dm9pZCAwO2Z1bmN0aW9uIGoodCl7cmV0dXJuIG51bGw9PXQ/dm9pZCAwPT09dD95OmI6diYmdiBpbiBPYmplY3QodCk/ZnVuY3Rpb24odCl7dmFyIHI9Zi5jYWxsKHQscyksZT10W3NdO3RyeXt0W3NdPXZvaWQgMDt2YXIgbj0hMH1jYXRjaCh0KXt9dmFyIG89bC5jYWxsKHQpO3JldHVybiBuJiYocj90W3NdPWU6ZGVsZXRlIHRbc10pLG99KHQpOmZ1bmN0aW9uKHQpe3JldHVybiBwLmNhbGwodCl9KHQpfWZ1bmN0aW9uIGgodCl7cmV0dXJuIG51bGwhPXQmJiJvYmplY3QiPT10eXBlb2YgdH12YXIgZD0iW29iamVjdCBTeW1ib2xdIjtmdW5jdGlvbiBfKHQpe3JldHVybiJzeW1ib2wiPT10eXBlb2YgdHx8aCh0KSYmaih0KT09ZH12YXIgZz0vXC58XFsoPzpbXltcXV0qfChbIiddKSg/Oig/IVwxKVteXFxdfFxcLikqP1wxKVxdLyxPPS9eXHcqJC87ZnVuY3Rpb24gbSh0KXt2YXIgcj10eXBlb2YgdDtyZXR1cm4gbnVsbCE9dCYmKCJvYmplY3QiPT1yfHwiZnVuY3Rpb24iPT1yKX12YXIgdz0iW29iamVjdCBBc3luY0Z1bmN0aW9uXSIsQT0iW29iamVjdCBGdW5jdGlvbl0iLFM9IltvYmplY3QgR2VuZXJhdG9yRnVuY3Rpb25dIix4PSJbb2JqZWN0IFByb3h5XSI7ZnVuY3Rpb24gUCh0KXtpZighbSh0KSlyZXR1cm4hMTt2YXIgcj1qKHQpO3JldHVybiByPT1BfHxyPT1TfHxyPT13fHxyPT14fXZhciB6LEU9Y1siX19jb3JlLWpzX3NoYXJlZF9fIl0sST0oej0vW14uXSskLy5leGVjKEUmJkUua2V5cyYmRS5rZXlzLklFX1BST1RPfHwiIikpPyJTeW1ib2woc3JjKV8xLiIrejoiIjt2YXIgRj1GdW5jdGlvbi5wcm90b3R5cGUudG9TdHJpbmc7ZnVuY3Rpb24gVSh0KXtpZihudWxsIT10KXt0cnl7cmV0dXJuIEYuY2FsbCh0KX1jYXRjaCh0KXt9dHJ5e3JldHVybiB0KyIifWNhdGNoKHQpe319cmV0dXJuIiJ9dmFyIE09L15cW29iamVjdCAuKz9Db25zdHJ1Y3RvclxdJC8sJD1GdW5jdGlvbi5wcm90b3R5cGUsRD1PYmplY3QucHJvdG90eXBlLFQ9JC50b1N0cmluZyxCPUQuaGFzT3duUHJvcGVydHksaz1SZWdFeHAoIl4iK1QuY2FsbChCKS5yZXBsYWNlKC9bXFxeJC4qKz8oKVtcXXt9fF0vZywiXFwkJiIpLnJlcGxhY2UoL2hhc093blByb3BlcnR5fChmdW5jdGlvbikuKj8oPz1cXFwoKXwgZm9yIC4rPyg/PVxcXF0pL2csIiQxLio/IikrIiQiKTtmdW5jdGlvbiBDKHQpe3JldHVybiEoIW0odCl8fChyPXQsSSYmSSBpbiByKSkmJihQKHQpP2s6TSkudGVzdChVKHQpKTt2YXIgcn1mdW5jdGlvbiBOKHQscil7dmFyIGU9ZnVuY3Rpb24odCxyKXtyZXR1cm4gbnVsbD09dD92b2lkIDA6dFtyXX0odCxyKTtyZXR1cm4gQyhlKT9lOnZvaWQgMH12YXIgUj1OKE9iamVjdCwiY3JlYXRlIik7dmFyIFY9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTt2YXIgVz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O2Z1bmN0aW9uIEwodCl7dmFyIHI9LTEsZT1udWxsPT10PzA6dC5sZW5ndGg7Zm9yKHRoaXMuY2xlYXIoKTsrK3I8ZTspe3ZhciBuPXRbcl07dGhpcy5zZXQoblswXSxuWzFdKX19ZnVuY3Rpb24gcSh0LHIpe3JldHVybiB0PT09cnx8dCE9dCYmciE9cn1mdW5jdGlvbiBHKHQscil7Zm9yKHZhciBlPXQubGVuZ3RoO2UtLTspaWYocSh0W2VdWzBdLHIpKXJldHVybiBlO3JldHVybi0xfUwucHJvdG90eXBlLmNsZWFyPWZ1bmN0aW9uKCl7dGhpcy5fX2RhdGFfXz1SP1IobnVsbCk6e30sdGhpcy5zaXplPTB9LEwucHJvdG90eXBlLmRlbGV0ZT1mdW5jdGlvbih0KXt2YXIgcj10aGlzLmhhcyh0KSYmZGVsZXRlIHRoaXMuX19kYXRhX19bdF07cmV0dXJuIHRoaXMuc2l6ZS09cj8xOjAscn0sTC5wcm90b3R5cGUuZ2V0PWZ1bmN0aW9uKHQpe3ZhciByPXRoaXMuX19kYXRhX187aWYoUil7dmFyIGU9clt0XTtyZXR1cm4iX19sb2Rhc2hfaGFzaF91bmRlZmluZWRfXyI9PT1lP3ZvaWQgMDplfXJldHVybiBWLmNhbGwocix0KT9yW3RdOnZvaWQgMH0sTC5wcm90b3R5cGUuaGFzPWZ1bmN0aW9uKHQpe3ZhciByPXRoaXMuX19kYXRhX187cmV0dXJuIFI/dm9pZCAwIT09clt0XTpXLmNhbGwocix0KX0sTC5wcm90b3R5cGUuc2V0PWZ1bmN0aW9uKHQscil7dmFyIGU9dGhpcy5fX2RhdGFfXztyZXR1cm4gdGhpcy5zaXplKz10aGlzLmhhcyh0KT8wOjEsZVt0XT1SJiZ2b2lkIDA9PT1yPyJfX2xvZGFzaF9oYXNoX3VuZGVmaW5lZF9fIjpyLHRoaXN9O3ZhciBLPUFycmF5LnByb3RvdHlwZS5zcGxpY2U7ZnVuY3Rpb24gSCh0KXt2YXIgcj0tMSxlPW51bGw9PXQ/MDp0Lmxlbmd0aDtmb3IodGhpcy5jbGVhcigpOysrcjxlOyl7dmFyIG49dFtyXTt0aGlzLnNldChuWzBdLG5bMV0pfX1ILnByb3RvdHlwZS5jbGVhcj1mdW5jdGlvbigpe3RoaXMuX19kYXRhX189W10sdGhpcy5zaXplPTB9LEgucHJvdG90eXBlLmRlbGV0ZT1mdW5jdGlvbih0KXt2YXIgcj10aGlzLl9fZGF0YV9fLGU9RyhyLHQpO3JldHVybiEoZTwwKSYmKGU9PXIubGVuZ3RoLTE/ci5wb3AoKTpLLmNhbGwocixlLDEpLC0tdGhpcy5zaXplLCEwKX0sSC5wcm90b3R5cGUuZ2V0PWZ1bmN0aW9uKHQpe3ZhciByPXRoaXMuX19kYXRhX18sZT1HKHIsdCk7cmV0dXJuIGU8MD92b2lkIDA6cltlXVsxXX0sSC5wcm90b3R5cGUuaGFzPWZ1bmN0aW9uKHQpe3JldHVybiBHKHRoaXMuX19kYXRhX18sdCk+LTF9LEgucHJvdG90eXBlLnNldD1mdW5jdGlvbih0LHIpe3ZhciBlPXRoaXMuX19kYXRhX18sbj1HKGUsdCk7cmV0dXJuIG48MD8oKyt0aGlzLnNpemUsZS5wdXNoKFt0LHJdKSk6ZVtuXVsxXT1yLHRoaXN9O3ZhciBKPU4oYywiTWFwIik7ZnVuY3Rpb24gUSh0LHIpe3ZhciBlLG4sbz10Ll9fZGF0YV9fO3JldHVybigic3RyaW5nIj09KG49dHlwZW9mKGU9cikpfHwibnVtYmVyIj09bnx8InN5bWJvbCI9PW58fCJib29sZWFuIj09bj8iX19wcm90b19fIiE9PWU6bnVsbD09PWUpP29bInN0cmluZyI9PXR5cGVvZiByPyJzdHJpbmciOiJoYXNoIl06by5tYXB9ZnVuY3Rpb24gWCh0KXt2YXIgcj0tMSxlPW51bGw9PXQ/MDp0Lmxlbmd0aDtmb3IodGhpcy5jbGVhcigpOysrcjxlOyl7dmFyIG49dFtyXTt0aGlzLnNldChuWzBdLG5bMV0pfX1YLnByb3RvdHlwZS5jbGVhcj1mdW5jdGlvbigpe3RoaXMuc2l6ZT0wLHRoaXMuX19kYXRhX189e2hhc2g6bmV3IEwsbWFwOm5ldyhKfHxIKSxzdHJpbmc6bmV3IEx9fSxYLnByb3RvdHlwZS5kZWxldGU9ZnVuY3Rpb24odCl7dmFyIHI9USh0aGlzLHQpLmRlbGV0ZSh0KTtyZXR1cm4gdGhpcy5zaXplLT1yPzE6MCxyfSxYLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24odCl7cmV0dXJuIFEodGhpcyx0KS5nZXQodCl9LFgucHJvdG90eXBlLmhhcz1mdW5jdGlvbih0KXtyZXR1cm4gUSh0aGlzLHQpLmhhcyh0KX0sWC5wcm90b3R5cGUuc2V0PWZ1bmN0aW9uKHQscil7dmFyIGU9USh0aGlzLHQpLG49ZS5zaXplO3JldHVybiBlLnNldCh0LHIpLHRoaXMuc2l6ZSs9ZS5zaXplPT1uPzA6MSx0aGlzfTt2YXIgWT0iRXhwZWN0ZWQgYSBmdW5jdGlvbiI7ZnVuY3Rpb24gWih0LHIpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiB0fHxudWxsIT1yJiYiZnVuY3Rpb24iIT10eXBlb2Ygcil0aHJvdyBuZXcgVHlwZUVycm9yKFkpO3ZhciBlPWZ1bmN0aW9uKCl7dmFyIG49YXJndW1lbnRzLG89cj9yLmFwcGx5KHRoaXMsbik6blswXSx1PWUuY2FjaGU7aWYodS5oYXMobykpcmV0dXJuIHUuZ2V0KG8pO3ZhciBjPXQuYXBwbHkodGhpcyxuKTtyZXR1cm4gZS5jYWNoZT11LnNldChvLGMpfHx1LGN9O3JldHVybiBlLmNhY2hlPW5ldyhaLkNhY2hlfHxYKSxlfVouQ2FjaGU9WDt2YXIgdHQscnQsZXQsbnQ9L1teLltcXV0rfFxbKD86KC0/XGQrKD86XC5cZCspPyl8KFsiJ10pKCg/Oig/IVwyKVteXFxdfFxcLikqPylcMilcXXwoPz0oPzpcLnxcW1xdKSg/OlwufFxbXF18JCkpL2csb3Q9L1xcKFxcKT8vZyx1dD0odHQ9ZnVuY3Rpb24odCl7dmFyIHI9W107cmV0dXJuIDQ2PT09dC5jaGFyQ29kZUF0KDApJiZyLnB1c2goIiIpLHQucmVwbGFjZShudCwoZnVuY3Rpb24odCxlLG4sbyl7ci5wdXNoKG4/by5yZXBsYWNlKG90LCIkMSIpOmV8fHQpfSkpLHJ9LHJ0PVoodHQsKGZ1bmN0aW9uKHQpe3JldHVybiA1MDA9PT1ldC5zaXplJiZldC5jbGVhcigpLHR9KSksZXQ9cnQuY2FjaGUscnQpLGN0PXV0O3ZhciBpdD0xLzAsYXQ9aT9pLnByb3RvdHlwZTp2b2lkIDAsZnQ9YXQ/YXQudG9TdHJpbmc6dm9pZCAwO2Z1bmN0aW9uIGx0KHQpe2lmKCJzdHJpbmciPT10eXBlb2YgdClyZXR1cm4gdDtpZihuKHQpKXJldHVybiBmdW5jdGlvbih0LHIpe2Zvcih2YXIgZT0tMSxuPW51bGw9PXQ/MDp0Lmxlbmd0aCxvPUFycmF5KG4pOysrZTxuOylvW2VdPXIodFtlXSxlLHQpO3JldHVybiBvfSh0LGx0KSsiIjtpZihfKHQpKXJldHVybiBmdD9mdC5jYWxsKHQpOiIiO3ZhciByPXQrIiI7cmV0dXJuIjAiPT1yJiYxL3Q9PS1pdD8iLTAiOnJ9ZnVuY3Rpb24gc3QodCxyKXtyZXR1cm4gbih0KT90OmZ1bmN0aW9uKHQscil7aWYobih0KSlyZXR1cm4hMTt2YXIgZT10eXBlb2YgdDtyZXR1cm4hKCJudW1iZXIiIT1lJiYic3ltYm9sIiE9ZSYmImJvb2xlYW4iIT1lJiZudWxsIT10JiYhXyh0KSl8fE8udGVzdCh0KXx8IWcudGVzdCh0KXx8bnVsbCE9ciYmdCBpbiBPYmplY3Qocil9KHQscik/W3RdOmN0KGZ1bmN0aW9uKHQpe3JldHVybiBudWxsPT10PyIiOmx0KHQpfSh0KSl9dmFyIHB0PTEvMDtmdW5jdGlvbiBidCh0KXtpZigic3RyaW5nIj09dHlwZW9mIHR8fF8odCkpcmV0dXJuIHQ7dmFyIHI9dCsiIjtyZXR1cm4iMCI9PXImJjEvdD09LXB0PyItMCI6cn1mdW5jdGlvbiB5dCh0LHIsZSl7dmFyIG49bnVsbD09dD92b2lkIDA6ZnVuY3Rpb24odCxyKXtmb3IodmFyIGU9MCxuPShyPXN0KHIsdCkpLmxlbmd0aDtudWxsIT10JiZlPG47KXQ9dFtidChyW2UrK10pXTtyZXR1cm4gZSYmZT09bj90OnZvaWQgMH0odCxyKTtyZXR1cm4gdm9pZCAwPT09bj9lOm59dmFyIHZ0PU9iamVjdC5wcm90b3R5cGU7ZnVuY3Rpb24ganQodCl7dmFyIHI9dCYmdC5jb25zdHJ1Y3RvcjtyZXR1cm4gdD09PSgiZnVuY3Rpb24iPT10eXBlb2YgciYmci5wcm90b3R5cGV8fHZ0KX1mdW5jdGlvbiBodCh0LHIpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gdChyKGUpKX19dmFyIGR0PWh0KE9iamVjdC5rZXlzLE9iamVjdCksX3Q9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtmdW5jdGlvbiBndCh0KXtpZighanQodCkpcmV0dXJuIGR0KHQpO3ZhciByPVtdO2Zvcih2YXIgZSBpbiBPYmplY3QodCkpX3QuY2FsbCh0LGUpJiYiY29uc3RydWN0b3IiIT1lJiZyLnB1c2goZSk7cmV0dXJuIHJ9dmFyIE90PU4oYywiRGF0YVZpZXciKSxtdD1OKGMsIlByb21pc2UiKSx3dD1OKGMsIlNldCIpLEF0PU4oYywiV2Vha01hcCIpLFN0PSJbb2JqZWN0IE1hcF0iLHh0PSJbb2JqZWN0IFByb21pc2VdIixQdD0iW29iamVjdCBTZXRdIix6dD0iW29iamVjdCBXZWFrTWFwXSIsRXQ9IltvYmplY3QgRGF0YVZpZXddIixJdD1VKE90KSxGdD1VKEopLFV0PVUobXQpLE10PVUod3QpLCR0PVUoQXQpLER0PWo7KE90JiZEdChuZXcgT3QobmV3IEFycmF5QnVmZmVyKDEpKSkhPUV0fHxKJiZEdChuZXcgSikhPVN0fHxtdCYmRHQobXQucmVzb2x2ZSgpKSE9eHR8fHd0JiZEdChuZXcgd3QpIT1QdHx8QXQmJkR0KG5ldyBBdCkhPXp0KSYmKER0PWZ1bmN0aW9uKHQpe3ZhciByPWoodCksZT0iW29iamVjdCBPYmplY3RdIj09cj90LmNvbnN0cnVjdG9yOnZvaWQgMCxuPWU/VShlKToiIjtpZihuKXN3aXRjaChuKXtjYXNlIEl0OnJldHVybiBFdDtjYXNlIEZ0OnJldHVybiBTdDtjYXNlIFV0OnJldHVybiB4dDtjYXNlIE10OnJldHVybiBQdDtjYXNlICR0OnJldHVybiB6dH1yZXR1cm4gcn0pO3ZhciBUdD1EdCxCdD05MDA3MTk5MjU0NzQwOTkxO2Z1bmN0aW9uIGt0KHQpe3JldHVybiJudW1iZXIiPT10eXBlb2YgdCYmdD4tMSYmdCUxPT0wJiZ0PD1CdH1mdW5jdGlvbiBDdCh0KXtyZXR1cm4gbnVsbCE9dCYma3QodC5sZW5ndGgpJiYhUCh0KX12YXIgTnQ9IltvYmplY3QgU3RyaW5nXSI7dmFyIFJ0LFZ0PShSdD0ibGVuZ3RoIixmdW5jdGlvbih0KXtyZXR1cm4gbnVsbD09dD92b2lkIDA6dFtSdF19KSxXdD1SZWdFeHAoIltcXHUyMDBkXFx1ZDgwMC1cXHVkZmZmXFx1MDMwMC1cXHUwMzZmXFx1ZmUyMC1cXHVmZTJmXFx1MjBkMC1cXHUyMGZmXFx1ZmUwZVxcdWZlMGZdIik7dmFyIEx0PSJcXHVkODAwLVxcdWRmZmYiLHF0PSJbIitMdCsiXSIsR3Q9IltcXHUwMzAwLVxcdTAzNmZcXHVmZTIwLVxcdWZlMmZcXHUyMGQwLVxcdTIwZmZdIixLdD0iXFx1ZDgzY1tcXHVkZmZiLVxcdWRmZmZdIixIdD0iW14iK0x0KyJdIixKdD0iKD86XFx1ZDgzY1tcXHVkZGU2LVxcdWRkZmZdKXsyfSIsUXQ9IltcXHVkODAwLVxcdWRiZmZdW1xcdWRjMDAtXFx1ZGZmZl0iLFh0PSIoPzoiK0d0KyJ8IitLdCsiKSIrIj8iLFl0PSJbXFx1ZmUwZVxcdWZlMGZdPyIsWnQ9WXQrWHQrKCIoPzpcXHUyMDBkKD86IitbSHQsSnQsUXRdLmpvaW4oInwiKSsiKSIrWXQrWHQrIikqIiksdHI9Iig/OiIrW0h0K0d0KyI/IixHdCxKdCxRdCxxdF0uam9pbigifCIpKyIpIixycj1SZWdFeHAoS3QrIig/PSIrS3QrIil8Iit0citadCwiZyIpO2Z1bmN0aW9uIGVyKHQpe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gV3QudGVzdCh0KX0odCk/ZnVuY3Rpb24odCl7Zm9yKHZhciByPXJyLmxhc3RJbmRleD0wO3JyLnRlc3QodCk7KSsrcjtyZXR1cm4gcn0odCk6VnQodCl9dmFyIG5yPSJbb2JqZWN0IE1hcF0iLG9yPSJbb2JqZWN0IFNldF0iO2Z1bmN0aW9uIHVyKHQpe2lmKG51bGw9PXQpcmV0dXJuIDA7aWYoQ3QodCkpcmV0dXJuInN0cmluZyI9PXR5cGVvZihyPXQpfHwhbihyKSYmaChyKSYmaihyKT09TnQ/ZXIodCk6dC5sZW5ndGg7dmFyIHIsZT1UdCh0KTtyZXR1cm4gZT09bnJ8fGU9PW9yP3Quc2l6ZTpndCh0KS5sZW5ndGh9dmFyIGNyPU1hdGguY2VpbCxpcj1NYXRoLm1heDt2YXIgYXI9OTAwNzE5OTI1NDc0MDk5MSxmcj0vXig/OjB8WzEtOV1cZCopJC87ZnVuY3Rpb24gbHIodCxyKXt2YXIgZT10eXBlb2YgdDtyZXR1cm4hIShyPW51bGw9PXI/YXI6cikmJigibnVtYmVyIj09ZXx8InN5bWJvbCIhPWUmJmZyLnRlc3QodCkpJiZ0Pi0xJiZ0JTE9PTAmJnQ8cn12YXIgc3I9L1xzLzt2YXIgcHI9L15ccysvO2Z1bmN0aW9uIGJyKHQpe3JldHVybiB0P3Quc2xpY2UoMCxmdW5jdGlvbih0KXtmb3IodmFyIHI9dC5sZW5ndGg7ci0tJiZzci50ZXN0KHQuY2hhckF0KHIpKTspO3JldHVybiByfSh0KSsxKS5yZXBsYWNlKHByLCIiKTp0fXZhciB5cj1OYU4sdnI9L15bLStdMHhbMC05YS1mXSskL2ksanI9L14wYlswMV0rJC9pLGhyPS9eMG9bMC03XSskL2ksZHI9cGFyc2VJbnQ7dmFyIF9yPTEvMCxncj0xNzk3NjkzMTM0ODYyMzE1N2UyOTI7ZnVuY3Rpb24gT3IodCl7cmV0dXJuIHQ/KHQ9ZnVuY3Rpb24odCl7aWYoIm51bWJlciI9PXR5cGVvZiB0KXJldHVybiB0O2lmKF8odCkpcmV0dXJuIHlyO2lmKG0odCkpe3ZhciByPSJmdW5jdGlvbiI9PXR5cGVvZiB0LnZhbHVlT2Y/dC52YWx1ZU9mKCk6dDt0PW0ocik/cisiIjpyfWlmKCJzdHJpbmciIT10eXBlb2YgdClyZXR1cm4gMD09PXQ/dDordDt0PWJyKHQpO3ZhciBlPWpyLnRlc3QodCk7cmV0dXJuIGV8fGhyLnRlc3QodCk/ZHIodC5zbGljZSgyKSxlPzI6OCk6dnIudGVzdCh0KT95cjordH0odCkpPT09X3J8fHQ9PT0tX3I/KHQ8MD8tMToxKSpncjp0PT10P3Q6MDowPT09dD90OjB9dmFyIG1yLHdyPWZ1bmN0aW9uKHQscixlKXtyZXR1cm4gZSYmIm51bWJlciIhPXR5cGVvZiBlJiZmdW5jdGlvbih0LHIsZSl7aWYoIW0oZSkpcmV0dXJuITE7dmFyIG49dHlwZW9mIHI7cmV0dXJuISEoIm51bWJlciI9PW4/Q3QoZSkmJmxyKHIsZS5sZW5ndGgpOiJzdHJpbmciPT1uJiZyIGluIGUpJiZxKGVbcl0sdCl9KHQscixlKSYmKHI9ZT12b2lkIDApLHQ9T3IodCksdm9pZCAwPT09cj8ocj10LHQ9MCk6cj1PcihyKSxmdW5jdGlvbih0LHIsZSxuKXtmb3IodmFyIG89LTEsdT1pcihjcigoci10KS8oZXx8MSkpLDApLGM9QXJyYXkodSk7dS0tOyljW24/dTorK29dPXQsdCs9ZTtyZXR1cm4gY30odCxyLGU9dm9pZCAwPT09ZT90PHI/MTotMTpPcihlKSxtcil9LEFyPXdyO2Z1bmN0aW9uIFNyKHQpe3ZhciByPXRoaXMuX19kYXRhX189bmV3IEgodCk7dGhpcy5zaXplPXIuc2l6ZX1Tci5wcm90b3R5cGUuY2xlYXI9ZnVuY3Rpb24oKXt0aGlzLl9fZGF0YV9fPW5ldyBILHRoaXMuc2l6ZT0wfSxTci5wcm90b3R5cGUuZGVsZXRlPWZ1bmN0aW9uKHQpe3ZhciByPXRoaXMuX19kYXRhX18sZT1yLmRlbGV0ZSh0KTtyZXR1cm4gdGhpcy5zaXplPXIuc2l6ZSxlfSxTci5wcm90b3R5cGUuZ2V0PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9fZGF0YV9fLmdldCh0KX0sU3IucHJvdG90eXBlLmhhcz1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fX2RhdGFfXy5oYXModCl9LFNyLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24odCxyKXt2YXIgZT10aGlzLl9fZGF0YV9fO2lmKGUgaW5zdGFuY2VvZiBIKXt2YXIgbj1lLl9fZGF0YV9fO2lmKCFKfHxuLmxlbmd0aDwxOTkpcmV0dXJuIG4ucHVzaChbdCxyXSksdGhpcy5zaXplPSsrZS5zaXplLHRoaXM7ZT10aGlzLl9fZGF0YV9fPW5ldyBYKG4pfXJldHVybiBlLnNldCh0LHIpLHRoaXMuc2l6ZT1lLnNpemUsdGhpc307dmFyIHhyPWZ1bmN0aW9uKCl7dHJ5e3ZhciB0PU4oT2JqZWN0LCJkZWZpbmVQcm9wZXJ0eSIpO3JldHVybiB0KHt9LCIiLHt9KSx0fWNhdGNoKHQpe319KCksUHI9eHI7ZnVuY3Rpb24genIodCxyLGUpeyJfX3Byb3RvX18iPT1yJiZQcj9Qcih0LHIse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiEwLHZhbHVlOmUsd3JpdGFibGU6ITB9KTp0W3JdPWV9dmFyIEVyPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7ZnVuY3Rpb24gSXIodCxyLGUpe3ZhciBuPXRbcl07RXIuY2FsbCh0LHIpJiZxKG4sZSkmJih2b2lkIDAhPT1lfHxyIGluIHQpfHx6cih0LHIsZSl9ZnVuY3Rpb24gRnIodCxyLGUsbil7dmFyIG89IWU7ZXx8KGU9e30pO2Zvcih2YXIgdT0tMSxjPXIubGVuZ3RoOysrdTxjOyl7dmFyIGk9clt1XSxhPW4/bihlW2ldLHRbaV0saSxlLHQpOnZvaWQgMDt2b2lkIDA9PT1hJiYoYT10W2ldKSxvP3pyKGUsaSxhKTpJcihlLGksYSl9cmV0dXJuIGV9ZnVuY3Rpb24gVXIodCl7cmV0dXJuIGgodCkmJiJbb2JqZWN0IEFyZ3VtZW50c10iPT1qKHQpfXZhciBNcj1PYmplY3QucHJvdG90eXBlLCRyPU1yLmhhc093blByb3BlcnR5LERyPU1yLnByb3BlcnR5SXNFbnVtZXJhYmxlLFRyPVVyKGZ1bmN0aW9uKCl7cmV0dXJuIGFyZ3VtZW50c30oKSk/VXI6ZnVuY3Rpb24odCl7cmV0dXJuIGgodCkmJiRyLmNhbGwodCwiY2FsbGVlIikmJiFEci5jYWxsKHQsImNhbGxlZSIpfTt2YXIgQnI9Im9iamVjdCI9PXR5cGVvZiBleHBvcnRzJiZleHBvcnRzJiYhZXhwb3J0cy5ub2RlVHlwZSYmZXhwb3J0cyxrcj1CciYmIm9iamVjdCI9PXR5cGVvZiBtb2R1bGUmJm1vZHVsZSYmIW1vZHVsZS5ub2RlVHlwZSYmbW9kdWxlLENyPWtyJiZrci5leHBvcnRzPT09QnI/Yy5CdWZmZXI6dm9pZCAwLE5yPShDcj9Dci5pc0J1ZmZlcjp2b2lkIDApfHxmdW5jdGlvbigpe3JldHVybiExfSxScj17fTtmdW5jdGlvbiBWcih0KXtyZXR1cm4gZnVuY3Rpb24ocil7cmV0dXJuIHQocil9fVJyWyJbb2JqZWN0IEZsb2F0MzJBcnJheV0iXT1SclsiW29iamVjdCBGbG9hdDY0QXJyYXldIl09UnJbIltvYmplY3QgSW50OEFycmF5XSJdPVJyWyJbb2JqZWN0IEludDE2QXJyYXldIl09UnJbIltvYmplY3QgSW50MzJBcnJheV0iXT1SclsiW29iamVjdCBVaW50OEFycmF5XSJdPVJyWyJbb2JqZWN0IFVpbnQ4Q2xhbXBlZEFycmF5XSJdPVJyWyJbb2JqZWN0IFVpbnQxNkFycmF5XSJdPVJyWyJbb2JqZWN0IFVpbnQzMkFycmF5XSJdPSEwLFJyWyJbb2JqZWN0IEFyZ3VtZW50c10iXT1SclsiW29iamVjdCBBcnJheV0iXT1SclsiW29iamVjdCBBcnJheUJ1ZmZlcl0iXT1SclsiW29iamVjdCBCb29sZWFuXSJdPVJyWyJbb2JqZWN0IERhdGFWaWV3XSJdPVJyWyJbb2JqZWN0IERhdGVdIl09UnJbIltvYmplY3QgRXJyb3JdIl09UnJbIltvYmplY3QgRnVuY3Rpb25dIl09UnJbIltvYmplY3QgTWFwXSJdPVJyWyJbb2JqZWN0IE51bWJlcl0iXT1SclsiW29iamVjdCBPYmplY3RdIl09UnJbIltvYmplY3QgUmVnRXhwXSJdPVJyWyJbb2JqZWN0IFNldF0iXT1SclsiW29iamVjdCBTdHJpbmddIl09UnJbIltvYmplY3QgV2Vha01hcF0iXT0hMTt2YXIgV3I9Im9iamVjdCI9PXR5cGVvZiBleHBvcnRzJiZleHBvcnRzJiYhZXhwb3J0cy5ub2RlVHlwZSYmZXhwb3J0cyxMcj1XciYmIm9iamVjdCI9PXR5cGVvZiBtb2R1bGUmJm1vZHVsZSYmIW1vZHVsZS5ub2RlVHlwZSYmbW9kdWxlLHFyPUxyJiZMci5leHBvcnRzPT09V3ImJm8ucHJvY2VzcyxHcj1mdW5jdGlvbigpe3RyeXt2YXIgdD1MciYmTHIucmVxdWlyZSYmTHIucmVxdWlyZSgidXRpbCIpLnR5cGVzO3JldHVybiB0fHxxciYmcXIuYmluZGluZyYmcXIuYmluZGluZygidXRpbCIpfWNhdGNoKHQpe319KCksS3I9R3ImJkdyLmlzVHlwZWRBcnJheSxIcj1Lcj9WcihLcik6ZnVuY3Rpb24odCl7cmV0dXJuIGgodCkmJmt0KHQubGVuZ3RoKSYmISFScltqKHQpXX0sSnI9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtmdW5jdGlvbiBRcih0LHIpe3ZhciBlPW4odCksbz0hZSYmVHIodCksdT0hZSYmIW8mJk5yKHQpLGM9IWUmJiFvJiYhdSYmSHIodCksaT1lfHxvfHx1fHxjLGE9aT9mdW5jdGlvbih0LHIpe2Zvcih2YXIgZT0tMSxuPUFycmF5KHQpOysrZTx0OyluW2VdPXIoZSk7cmV0dXJuIG59KHQubGVuZ3RoLFN0cmluZyk6W10sZj1hLmxlbmd0aDtmb3IodmFyIGwgaW4gdCkhciYmIUpyLmNhbGwodCxsKXx8aSYmKCJsZW5ndGgiPT1sfHx1JiYoIm9mZnNldCI9PWx8fCJwYXJlbnQiPT1sKXx8YyYmKCJidWZmZXIiPT1sfHwiYnl0ZUxlbmd0aCI9PWx8fCJieXRlT2Zmc2V0Ij09bCl8fGxyKGwsZikpfHxhLnB1c2gobCk7cmV0dXJuIGF9ZnVuY3Rpb24gWHIodCl7cmV0dXJuIEN0KHQpP1FyKHQpOmd0KHQpfXZhciBZcj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O2Z1bmN0aW9uIFpyKHQpe2lmKCFtKHQpKXJldHVybiBmdW5jdGlvbih0KXt2YXIgcj1bXTtpZihudWxsIT10KWZvcih2YXIgZSBpbiBPYmplY3QodCkpci5wdXNoKGUpO3JldHVybiByfSh0KTt2YXIgcj1qdCh0KSxlPVtdO2Zvcih2YXIgbiBpbiB0KSgiY29uc3RydWN0b3IiIT1ufHwhciYmWXIuY2FsbCh0LG4pKSYmZS5wdXNoKG4pO3JldHVybiBlfWZ1bmN0aW9uIHRlKHQpe3JldHVybiBDdCh0KT9Rcih0LCEwKTpacih0KX12YXIgcmU9Im9iamVjdCI9PXR5cGVvZiBleHBvcnRzJiZleHBvcnRzJiYhZXhwb3J0cy5ub2RlVHlwZSYmZXhwb3J0cyxlZT1yZSYmIm9iamVjdCI9PXR5cGVvZiBtb2R1bGUmJm1vZHVsZSYmIW1vZHVsZS5ub2RlVHlwZSYmbW9kdWxlLG5lPWVlJiZlZS5leHBvcnRzPT09cmU/Yy5CdWZmZXI6dm9pZCAwLG9lPW5lP25lLmFsbG9jVW5zYWZlOnZvaWQgMDtmdW5jdGlvbiB1ZSgpe3JldHVybltdfXZhciBjZT1PYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLGllPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMsYWU9aWU/ZnVuY3Rpb24odCl7cmV0dXJuIG51bGw9PXQ/W106KHQ9T2JqZWN0KHQpLGZ1bmN0aW9uKHQscil7Zm9yKHZhciBlPS0xLG49bnVsbD09dD8wOnQubGVuZ3RoLG89MCx1PVtdOysrZTxuOyl7dmFyIGM9dFtlXTtyKGMsZSx0KSYmKHVbbysrXT1jKX1yZXR1cm4gdX0oaWUodCksKGZ1bmN0aW9uKHIpe3JldHVybiBjZS5jYWxsKHQscil9KSkpfTp1ZSxmZT1hZTtmdW5jdGlvbiBsZSh0LHIpe2Zvcih2YXIgZT0tMSxuPXIubGVuZ3RoLG89dC5sZW5ndGg7KytlPG47KXRbbytlXT1yW2VdO3JldHVybiB0fXZhciBzZT1odChPYmplY3QuZ2V0UHJvdG90eXBlT2YsT2JqZWN0KSxwZT1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzP2Z1bmN0aW9uKHQpe2Zvcih2YXIgcj1bXTt0OylsZShyLGZlKHQpKSx0PXNlKHQpO3JldHVybiByfTp1ZSxiZT1wZTtmdW5jdGlvbiB5ZSh0LHIsZSl7dmFyIG89cih0KTtyZXR1cm4gbih0KT9vOmxlKG8sZSh0KSl9ZnVuY3Rpb24gdmUodCl7cmV0dXJuIHllKHQsWHIsZmUpfWZ1bmN0aW9uIGplKHQpe3JldHVybiB5ZSh0LHRlLGJlKX12YXIgaGU9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTt2YXIgZGU9Yy5VaW50OEFycmF5O2Z1bmN0aW9uIF9lKHQpe3ZhciByPW5ldyB0LmNvbnN0cnVjdG9yKHQuYnl0ZUxlbmd0aCk7cmV0dXJuIG5ldyBkZShyKS5zZXQobmV3IGRlKHQpKSxyfXZhciBnZT0vXHcqJC87dmFyIE9lPWk/aS5wcm90b3R5cGU6dm9pZCAwLG1lPU9lP09lLnZhbHVlT2Y6dm9pZCAwO3ZhciB3ZT0iW29iamVjdCBCb29sZWFuXSIsQWU9IltvYmplY3QgRGF0ZV0iLFNlPSJbb2JqZWN0IE1hcF0iLHhlPSJbb2JqZWN0IE51bWJlcl0iLFBlPSJbb2JqZWN0IFJlZ0V4cF0iLHplPSJbb2JqZWN0IFNldF0iLEVlPSJbb2JqZWN0IFN0cmluZ10iLEllPSJbb2JqZWN0IFN5bWJvbF0iLEZlPSJbb2JqZWN0IEFycmF5QnVmZmVyXSIsVWU9IltvYmplY3QgRGF0YVZpZXddIixNZT0iW29iamVjdCBGbG9hdDMyQXJyYXldIiwkZT0iW29iamVjdCBGbG9hdDY0QXJyYXldIixEZT0iW29iamVjdCBJbnQ4QXJyYXldIixUZT0iW29iamVjdCBJbnQxNkFycmF5XSIsQmU9IltvYmplY3QgSW50MzJBcnJheV0iLGtlPSJbb2JqZWN0IFVpbnQ4QXJyYXldIixDZT0iW29iamVjdCBVaW50OENsYW1wZWRBcnJheV0iLE5lPSJbb2JqZWN0IFVpbnQxNkFycmF5XSIsUmU9IltvYmplY3QgVWludDMyQXJyYXldIjtmdW5jdGlvbiBWZSh0LHIsZSl7dmFyIG4sbz10LmNvbnN0cnVjdG9yO3N3aXRjaChyKXtjYXNlIEZlOnJldHVybiBfZSh0KTtjYXNlIHdlOmNhc2UgQWU6cmV0dXJuIG5ldyBvKCt0KTtjYXNlIFVlOnJldHVybiBmdW5jdGlvbih0LHIpe3ZhciBlPXI/X2UodC5idWZmZXIpOnQuYnVmZmVyO3JldHVybiBuZXcgdC5jb25zdHJ1Y3RvcihlLHQuYnl0ZU9mZnNldCx0LmJ5dGVMZW5ndGgpfSh0LGUpO2Nhc2UgTWU6Y2FzZSAkZTpjYXNlIERlOmNhc2UgVGU6Y2FzZSBCZTpjYXNlIGtlOmNhc2UgQ2U6Y2FzZSBOZTpjYXNlIFJlOnJldHVybiBmdW5jdGlvbih0LHIpe3ZhciBlPXI/X2UodC5idWZmZXIpOnQuYnVmZmVyO3JldHVybiBuZXcgdC5jb25zdHJ1Y3RvcihlLHQuYnl0ZU9mZnNldCx0Lmxlbmd0aCl9KHQsZSk7Y2FzZSBTZTpyZXR1cm4gbmV3IG87Y2FzZSB4ZTpjYXNlIEVlOnJldHVybiBuZXcgbyh0KTtjYXNlIFBlOnJldHVybiBmdW5jdGlvbih0KXt2YXIgcj1uZXcgdC5jb25zdHJ1Y3Rvcih0LnNvdXJjZSxnZS5leGVjKHQpKTtyZXR1cm4gci5sYXN0SW5kZXg9dC5sYXN0SW5kZXgscn0odCk7Y2FzZSB6ZTpyZXR1cm4gbmV3IG87Y2FzZSBJZTpyZXR1cm4gbj10LG1lP09iamVjdChtZS5jYWxsKG4pKTp7fX19dmFyIFdlPU9iamVjdC5jcmVhdGUsTGU9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7fXJldHVybiBmdW5jdGlvbihyKXtpZighbShyKSlyZXR1cm57fTtpZihXZSlyZXR1cm4gV2Uocik7dC5wcm90b3R5cGU9cjt2YXIgZT1uZXcgdDtyZXR1cm4gdC5wcm90b3R5cGU9dm9pZCAwLGV9fSgpLHFlPUxlO3ZhciBHZT1HciYmR3IuaXNNYXAsS2U9R2U/VnIoR2UpOmZ1bmN0aW9uKHQpe3JldHVybiBoKHQpJiYiW29iamVjdCBNYXBdIj09VHQodCl9O3ZhciBIZT1HciYmR3IuaXNTZXQsSmU9SGU/VnIoSGUpOmZ1bmN0aW9uKHQpe3JldHVybiBoKHQpJiYiW29iamVjdCBTZXRdIj09VHQodCl9LFFlPTEsWGU9MixZZT00LFplPSJbb2JqZWN0IEFyZ3VtZW50c10iLHRuPSJbb2JqZWN0IEZ1bmN0aW9uXSIscm49IltvYmplY3QgR2VuZXJhdG9yRnVuY3Rpb25dIixlbj0iW29iamVjdCBPYmplY3RdIixubj17fTtmdW5jdGlvbiBvbih0LHIsZSxvLHUsYyl7dmFyIGksYT1yJlFlLGY9ciZYZSxsPXImWWU7aWYoZSYmKGk9dT9lKHQsbyx1LGMpOmUodCkpLHZvaWQgMCE9PWkpcmV0dXJuIGk7aWYoIW0odCkpcmV0dXJuIHQ7dmFyIHM9bih0KTtpZihzKXtpZihpPWZ1bmN0aW9uKHQpe3ZhciByPXQubGVuZ3RoLGU9bmV3IHQuY29uc3RydWN0b3Iocik7cmV0dXJuIHImJiJzdHJpbmciPT10eXBlb2YgdFswXSYmaGUuY2FsbCh0LCJpbmRleCIpJiYoZS5pbmRleD10LmluZGV4LGUuaW5wdXQ9dC5pbnB1dCksZX0odCksIWEpcmV0dXJuIGZ1bmN0aW9uKHQscil7dmFyIGU9LTEsbj10Lmxlbmd0aDtmb3Iocnx8KHI9QXJyYXkobikpOysrZTxuOylyW2VdPXRbZV07cmV0dXJuIHJ9KHQsaSl9ZWxzZXt2YXIgcD1UdCh0KSxiPXA9PXRufHxwPT1ybjtpZihOcih0KSlyZXR1cm4gZnVuY3Rpb24odCxyKXtpZihyKXJldHVybiB0LnNsaWNlKCk7dmFyIGU9dC5sZW5ndGgsbj1vZT9vZShlKTpuZXcgdC5jb25zdHJ1Y3RvcihlKTtyZXR1cm4gdC5jb3B5KG4pLG59KHQsYSk7aWYocD09ZW58fHA9PVplfHxiJiYhdSl7aWYoaT1mfHxiP3t9OmZ1bmN0aW9uKHQpe3JldHVybiJmdW5jdGlvbiIhPXR5cGVvZiB0LmNvbnN0cnVjdG9yfHxqdCh0KT97fTpxZShzZSh0KSl9KHQpLCFhKXJldHVybiBmP2Z1bmN0aW9uKHQscil7cmV0dXJuIEZyKHQsYmUodCkscil9KHQsZnVuY3Rpb24odCxyKXtyZXR1cm4gdCYmRnIocix0ZShyKSx0KX0oaSx0KSk6ZnVuY3Rpb24odCxyKXtyZXR1cm4gRnIodCxmZSh0KSxyKX0odCxmdW5jdGlvbih0LHIpe3JldHVybiB0JiZGcihyLFhyKHIpLHQpfShpLHQpKX1lbHNle2lmKCFubltwXSlyZXR1cm4gdT90Ont9O2k9VmUodCxwLGEpfX1jfHwoYz1uZXcgU3IpO3ZhciB5PWMuZ2V0KHQpO2lmKHkpcmV0dXJuIHk7Yy5zZXQodCxpKSxKZSh0KT90LmZvckVhY2goKGZ1bmN0aW9uKG4pe2kuYWRkKG9uKG4scixlLG4sdCxjKSl9KSk6S2UodCkmJnQuZm9yRWFjaCgoZnVuY3Rpb24obixvKXtpLnNldChvLG9uKG4scixlLG8sdCxjKSl9KSk7dmFyIHY9cz92b2lkIDA6KGw/Zj9qZTp2ZTpmP3RlOlhyKSh0KTtyZXR1cm4gZnVuY3Rpb24odCxyKXtmb3IodmFyIGU9LTEsbj1udWxsPT10PzA6dC5sZW5ndGg7KytlPG4mJiExIT09cih0W2VdLGUsdCk7KTt9KHZ8fHQsKGZ1bmN0aW9uKG4sbyl7diYmKG49dFtvPW5dKSxJcihpLG8sb24obixyLGUsbyx0LGMpKX0pKSxpfW5uW1plXT1ublsiW29iamVjdCBBcnJheV0iXT1ublsiW29iamVjdCBBcnJheUJ1ZmZlcl0iXT1ublsiW29iamVjdCBEYXRhVmlld10iXT1ublsiW29iamVjdCBCb29sZWFuXSJdPW5uWyJbb2JqZWN0IERhdGVdIl09bm5bIltvYmplY3QgRmxvYXQzMkFycmF5XSJdPW5uWyJbb2JqZWN0IEZsb2F0NjRBcnJheV0iXT1ublsiW29iamVjdCBJbnQ4QXJyYXldIl09bm5bIltvYmplY3QgSW50MTZBcnJheV0iXT1ublsiW29iamVjdCBJbnQzMkFycmF5XSJdPW5uWyJbb2JqZWN0IE1hcF0iXT1ublsiW29iamVjdCBOdW1iZXJdIl09bm5bZW5dPW5uWyJbb2JqZWN0IFJlZ0V4cF0iXT1ublsiW29iamVjdCBTZXRdIl09bm5bIltvYmplY3QgU3RyaW5nXSJdPW5uWyJbb2JqZWN0IFN5bWJvbF0iXT1ublsiW29iamVjdCBVaW50OEFycmF5XSJdPW5uWyJbb2JqZWN0IFVpbnQ4Q2xhbXBlZEFycmF5XSJdPW5uWyJbb2JqZWN0IFVpbnQxNkFycmF5XSJdPW5uWyJbb2JqZWN0IFVpbnQzMkFycmF5XSJdPSEwLG5uWyJbb2JqZWN0IEVycm9yXSJdPW5uW3RuXT1ublsiW29iamVjdCBXZWFrTWFwXSJdPSExO3ZhciB1bj0xLGNuPTQ7ZnVuY3Rpb24gYW4odCl7cmV0dXJuIG9uKHQsdW58Y24pfWZ1bmN0aW9uIGZuKHQpe3JldHVybiJbb2JqZWN0IEFycmF5XSI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCl9ZnVuY3Rpb24gbG4odCl7cmV0dXJuIltvYmplY3QgT2JqZWN0XSI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCl9dmFyIHNuPSJbb2JqZWN0IEJvb2xlYW5dIjtmdW5jdGlvbiBwbih0KXtyZXR1cm4hMD09PShyPXQpfHwhMT09PXJ8fGgocikmJmoocik9PXNuO3ZhciByfWZ1bmN0aW9uIGJuKHQscj1udWxsLGU9e30pe1Aocil8fChyPXQ9PnQpO2xldCBuPXl0KGUsImZvcmNlIiwhMSk7cmV0dXJuIHBuKG4pfHwobj0hMSksZnVuY3Rpb24odCxyLGU9ITEpe2xldCBuPVtdO2lmKCFmbih0KSYmIWxuKHQpKXJldHVybiByKHQsbnVsbCxbXSk7ZnVuY3Rpb24gbyh0KXtpZihmbih0KSlyZXR1cm4gQXIodXIodCkpO2lmKGxuKHQpKXtsZXQgcj1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0KSxuPW51bGw7cmV0dXJuIGUmJihuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHModCkpLGZuKHIpfHwocj1bXSksZm4obil8fChuPVtdKSxbLi4uciwuLi5uXX1yZXR1cm4gdH1yZXR1cm4gZnVuY3Rpb24gdChlLHUpe2lmKGZuKGUpKXJldHVybiBvKGUpLm1hcCgobz0+e2xldCB1PWVbb10sYz1hbihuKTtyZXR1cm4gbi5wdXNoKG8pLHU9cih1LG8sYyksdT10KHUpLG4ucG9wKCksdX0pKTtpZihsbihlKSl7bGV0IHU9byhlKSxjPXt9O3JldHVybiB1Lm1hcCgobz0+e2xldCB1PWVbb10saT1hbihuKTtuLnB1c2gobyksdT1yKHUsbyxpKSx1PXQodSksbi5wb3AoKSxjW29dPXV9KSksY31yZXR1cm4gZX0odCl9KHQscixuKX1mdW5jdGlvbiB5bih0KXtyZXR1cm4hKCFmdW5jdGlvbih0KXtyZXR1cm4iW29iamVjdCBTdHJpbmddIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KX0odCl8fCIiPT09dCl9ZnVuY3Rpb24gdm4odCxyKXt2YXIgZT1PYmplY3Qua2V5cyh0KTtpZihPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKXt2YXIgbj1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHQpO3ImJihuPW4uZmlsdGVyKChmdW5jdGlvbihyKXtyZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LHIpLmVudW1lcmFibGV9KSkpLGUucHVzaC5hcHBseShlLG4pfXJldHVybiBlfWZ1bmN0aW9uIGpuKHQpe2Zvcih2YXIgcj0xO3I8YXJndW1lbnRzLmxlbmd0aDtyKyspe3ZhciBuPW51bGwhPWFyZ3VtZW50c1tyXT9hcmd1bWVudHNbcl06e307ciUyP3ZuKE9iamVjdChuKSwhMCkuZm9yRWFjaCgoZnVuY3Rpb24ocil7ZSh0LHIsbltyXSl9KSk6T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM/T2JqZWN0LmRlZmluZVByb3BlcnRpZXModCxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhuKSk6dm4oT2JqZWN0KG4pKS5mb3JFYWNoKChmdW5jdGlvbihyKXtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxyLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobixyKSl9KSl9cmV0dXJuIHR9ZnVuY3Rpb24gaG4odCxyPXt9KXtpZihmbih0KSl7aWYoMD09PXQubGVuZ3RoKXJldHVybltdfWVsc2V7aWYoIWxuKHQpKXJldHVybltdO2lmKGZ1bmN0aW9uKHQpe2lmKGxuKHQpKXtmb3IobGV0IHIgaW4gdClyZXR1cm4hMTtyZXR1cm4hMH1yZXR1cm4hMX0odCkpcmV0dXJuW119bGV0IGU9eXQociwiYmluZEtleSIsbnVsbCk7eW4oZSl8fChlPSJpZCIpO2xldCBuPXl0KHIsImJpbmRDaGlsZHJlbiIsbnVsbCk7eW4obil8fChuPSJjaGlsZHJlbiIpO2xldCBvPSExO2xuKHQpJiYobz0hMCx0PVt0XSk7bGV0IHU9W107cmV0dXJuIGJuKHQsKCh0LHIsbyk9PntsZXQgYz15dCh0LGUsbnVsbCksaT15dCh0LG4sbnVsbCk7aWYoYyl7bGV0IGU9ZnVuY3Rpb24odCl7bGV0IHI9W3RbMF1dO2ZvcihsZXQgZT0xO2U8dC5sZW5ndGg7ZSsrKXtsZXQgbz10W2VdO3IucHVzaChuKSxyLnB1c2gobyl9cmV0dXJuIHJ9KFsuLi5vLHJdKTtpZih1LnB1c2goam4oam4oe30sdCkse30se2xldmVsOih1cihlKS0xKS8yLG5rOmV9KSksaSlyZXR1cm4gaX19KSksbyYmKHU9dVswXSksdX1sZXQgZmxhdHRlblRyZWVXaz1hc3luYyBmdW5jdGlvbih0LHI9e30pe3JldHVybiBobih0LHIpfTsKCgpsZXQgaW5zdGFuY2UgPSBudWxsCmZ1bmN0aW9uIGluaXQoaW5wdXQpewoKICAgIC8vaW5pdAogICAgbGV0IHIKICAgIAogICAgICAgIHIgPSB7CiAgICAgICAgICAgIG1haW46IGZsYXR0ZW5UcmVlV2sKICAgICAgICB9CiAgICAgICAgCgogICAgLy9vbgogICAgCgogICAgLy9zYXZlCiAgICBpbnN0YW5jZSA9IHIKCn0KCmZ1bmN0aW9uIHNlbmRNZXNzYWdlKGRhdGEpIHsKICAgIAogICAgICAgIHNlbGYucG9zdE1lc3NhZ2UoZGF0YSkKICAgICAgICAKfQoKYXN5bmMgZnVuY3Rpb24gcnVuKGRhdGEpIHsKICAgIC8vIGNvbnNvbGUubG9nKCdpbm5lciB3b3JrZXIgcnVuJyxkYXRhKQoKICAgIC8vbW9kZQogICAgbGV0IG1vZGUgPSBkYXRhLm1vZGUKCiAgICAvL2NoZWNrCiAgICBpZihtb2RlICE9PSAnaW5pdCcgJiYgbW9kZSAhPT0gJ2NhbGwnKXsKICAgICAgICByZXR1cm4KICAgIH0KCiAgICAvL2luaXQKICAgIGlmKG1vZGUgPT09ICdpbml0Jyl7CiAgICAgICAgCiAgICAgICAgdHJ5ewoKICAgICAgICAgICAgLy90eXBlCiAgICAgICAgICAgIGxldCB0eXBlID0gZGF0YS50eXBlCgogICAgICAgICAgICAvL2lucHV0CiAgICAgICAgICAgIGxldCBpbnB1dCA9IGRhdGEuaW5wdXQKICAgIAogICAgICAgICAgICAvL2luc3RhbmNlCiAgICAgICAgICAgIGlmKHR5cGUgPT09ICdmdW5jdGlvbicpewogICAgICAgICAgICAgICAgaW5pdCguLi5pbnB1dCkKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIGlmKHR5cGUgPT09ICdvYmplY3QnKXsKICAgICAgICAgICAgICAgIGluc3RhbmNlID0gZmxhdHRlblRyZWVXawogICAgICAgICAgICB9CgogICAgICAgIH0KICAgICAgICBjYXRjaChlcnIpewogICAgICAgIAogICAgICAgICAgICAvL3NlbmRNZXNzYWdlCiAgICAgICAgICAgIGxldCByZXMgPSB7CiAgICAgICAgICAgICAgICBtb2RlOiAnZW1pdCcsCiAgICAgICAgICAgICAgICBldk5hbWU6ICdlcnJvcicsCiAgICAgICAgICAgICAgICBtc2c6IGVyciwKICAgICAgICAgICAgfQogICAgICAgICAgICBzZW5kTWVzc2FnZShyZXMpCgogICAgICAgIH0KICAgICAgICAgICAgCiAgICB9CgogICAgLy9jaGVjawogICAgaWYobW9kZSA9PT0gJ2NhbGwnKXsKICAgICAgICBsZXQgc3RhdGUgPSAnJwogICAgICAgIGxldCBtc2cgPSBudWxsCgogICAgICAgIHRyeXsKCiAgICAgICAgICAgIC8vZnVuCiAgICAgICAgICAgIGxldCBmdW4gPSBpbnN0YW5jZVtkYXRhLmZ1bl0KCiAgICAgICAgICAgIC8vaW5wdXQKICAgICAgICAgICAgbGV0IGlucHV0ID0gZGF0YS5pbnB1dAoKICAgICAgICAgICAgLy9leGVjCiAgICAgICAgICAgIGF3YWl0IGZ1biguLi5pbnB1dCkKICAgICAgICAgICAgICAgIC50aGVuKChzdWMpID0+IHsKICAgICAgICAgICAgICAgICAgICBzdGF0ZT0nc3VjY2VzcycKICAgICAgICAgICAgICAgICAgICBtc2c9c3VjCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHsKICAgICAgICAgICAgICAgICAgICBzdGF0ZT0nZXJyb3InCiAgICAgICAgICAgICAgICAgICAgbXNnPWVycgogICAgICAgICAgICAgICAgfSkKCiAgICAgICAgfQogICAgICAgIGNhdGNoKGVycil7CiAgICAgICAgICAgIHN0YXRlID0gJ2Vycm9yJwogICAgICAgICAgICBtc2cgPSBlcnIKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgLy9zZW5kTWVzc2FnZQogICAgICAgIGxldCByZXMgPSB7CiAgICAgICAgICAgIG1vZGU6ICdyZXR1cm4nLAogICAgICAgICAgICBpZDogZGF0YS5pZCwKICAgICAgICAgICAgZnVuOiBkYXRhLmZ1biwKICAgICAgICAgICAgc3RhdGUsCiAgICAgICAgICAgIG1zZywKICAgICAgICB9CiAgICAgICAgc2VuZE1lc3NhZ2UocmVzKQoKICAgIH0KCn0KCmZ1bmN0aW9uIHJlY3ZNZXNzYWdlKGRhdGEpIHsKICAgIC8vIGNvbnNvbGUubG9nKCdpbm5lciB3b3JrZXIgcmVjdjonLCBkYXRhKQoKICAgIC8vZGF0YVJlY3YKICAgIGxldCBkYXRhUmVjdiA9IGRhdGEKCiAgICAvL3J1bgogICAgcnVuKGRhdGFSZWN2KQoKfQoKCiAgICAgICAgc2VsZi5vbm1lc3NhZ2UgPSBmdW5jdGlvbiAoZSkgewogICAgICAgICAgICByZWN2TWVzc2FnZShlLmRhdGEpCiAgICAgICAgfQogICAgICAgIAoKdHJ5ewogICAgcHJvY2Vzcy5vbigndW5oYW5kbGVkUmVqZWN0aW9uJywgKGVycikgPT4gewogICAgICAgIGNvbnNvbGUubG9nKCdpbm5lcjp1bmhhbmRsZWRSZWplY3Rpb24nLCBlcnIpCiAgICB9KQogICAgcHJvY2Vzcy5vbigndW5jYXVnaHRFeGNlcHRpb24nLCAoZXJyKSA9PiB7CiAgICAgICAgY29uc29sZS5sb2coJ2lubmVyOnVuY2F1Z2h0RXhjZXB0aW9uJywgZXJyKQogICAgfSkKICAgIHByb2Nlc3Mub24oJ3VuY2F1Z2h0RXhjZXB0aW9uTW9uaXRvcicsIChlcnIpID0+IHsKICAgICAgICBjb25zb2xlLmxvZygnaW5uZXI6dW5jYXVnaHRFeGNlcHRpb25Nb25pdG9yJywgZXJyKQogICAgfSkKfQpjYXRjaChlcnIpe30KCg==");function l(){let l=new h;let I=function(d){try{let l=new Blob([d]),I=window.URL||window.webkitURL;return new Worker(I.createObjectURL(l))}catch(d){i(d)}}(d);if(!I)return i("invalid worker"),null;function c(){let d=function(){let d,l,I=new Promise((function(){d=arguments[0],l=arguments[1]}));return I.resolve=d,I.reject=l,I}(),c=function(){let d=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,l=[],I="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),c=I.length;for(let i=0;i<d;i++)l[i]=I[0|Math.random()*c];return l.join("")}(),i={mode:"call",id:c,fun:"main",input:[...arguments]};return I.postMessage(i),l.once(c,(l=>{"success"===l.state?d.resolve(l.msg):d.reject(l.msg)})),d}function i(d){l.emit("error",d)}return I.onmessage=function(d){!function(d){let I=d,c=I.mode;"emit"!==c&&"return"!==c||("emit"===c&&l.emit(I.evName,I.msg),"return"===c&&l.emit(I.id,I))}(d.data)},I.onerror=i,I.onmessageerror=function(d){i(d.data)},function(){let d={mode:"init",type:"function",input:[...arguments]};I.postMessage(d)}([...arguments]),l.main=c,l.main=c,l.terminate=function(){I?(I.terminate(),I=void 0):i("worker has been terminated")},l}e=async function(){let d=[...arguments],I=l();return await I.main(...d).finally((()=>{I.terminate()}))}}();try{process.on("unhandledRejection",(d=>{console.log("outer:unhandledRejection",d)})),process.on("uncaughtException",(d=>{console.log("outer:uncaughtException",d)})),process.on("uncaughtExceptionMonitor",(d=>{console.log("outer:uncaughtExceptionMonitor",d)}))}catch(d){}var J=e;export{J as default};
