const d="function"==typeof atob,I="function"==typeof Buffer,l="function"==typeof TextDecoder?new TextDecoder:void 0,b=("function"==typeof TextEncoder&&new TextEncoder,Array.prototype.slice.call("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=")),m=(d=>{let I={};return b.forEach(((d,l)=>I[d]=l)),I})(),Z=/^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/,c=String.fromCharCode.bind(String),i="function"==typeof Uint8Array.from?Uint8Array.from.bind(Uint8Array):d=>new Uint8Array(Array.prototype.slice.call(d,0)),X=d=>d.replace(/[^A-Za-z0-9\+\/]/g,""),C=/[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g,y=d=>{switch(d.length){case 4:var I=((7&d.charCodeAt(0))<<18|(63&d.charCodeAt(1))<<12|(63&d.charCodeAt(2))<<6|63&d.charCodeAt(3))-65536;return c(55296+(I>>>10))+c(56320+(1023&I));case 3:return c((15&d.charCodeAt(0))<<12|(63&d.charCodeAt(1))<<6|63&d.charCodeAt(2));default:return c((31&d.charCodeAt(0))<<6|63&d.charCodeAt(1))}},V=d=>d.replace(C,y),W=d=>{if(d=d.replace(/\s+/g,""),!Z.test(d))throw new TypeError("malformed base64.");d+="==".slice(2-(3&d.length));let I,l,b,i="";for(let Z=0;Z<d.length;)I=m[d.charAt(Z++)]<<18|m[d.charAt(Z++)]<<12|(l=m[d.charAt(Z++)])<<6|(b=m[d.charAt(Z++)]),i+=64===l?c(I>>16&255):64===b?c(I>>16&255,I>>8&255):c(I>>16&255,I>>8&255,255&I);return i},p=d?d=>atob(X(d)):I?d=>Buffer.from(d,"base64").toString("binary"):W,G=I?d=>i(Buffer.from(d,"base64")):d=>i(p(d).split("").map((d=>d.charCodeAt(0)))),u=I?d=>Buffer.from(d,"base64").toString("utf8"):l?d=>l.decode(G(d)):d=>V(p(d)),n=d=>X(d.replace(/[-_]/g,(d=>"-"==d?"+":"/"))),g=d=>u(n(d)),h=g;var H={};!function(d){var I=Object.prototype.hasOwnProperty,l="~";function b(){}function m(d,I,l){this.fn=d,this.context=I,this.once=l||!1}function Z(d,I,b,Z,c){if("function"!=typeof b)throw new TypeError("The listener must be a function");var i=new m(b,Z||d,c),X=l?l+I:I;return d._events[X]?d._events[X].fn?d._events[X]=[d._events[X],i]:d._events[X].push(i):(d._events[X]=i,d._eventsCount++),d}function c(d,I){0==--d._eventsCount?d._events=new b:delete d._events[I]}function i(){this._events=new b,this._eventsCount=0}Object.create&&(b.prototype=Object.create(null),(new b).__proto__||(l=!1)),i.prototype.eventNames=function(){var d,b,m=[];if(0===this._eventsCount)return m;for(b in d=this._events)I.call(d,b)&&m.push(l?b.slice(1):b);return Object.getOwnPropertySymbols?m.concat(Object.getOwnPropertySymbols(d)):m},i.prototype.listeners=function(d){var I=l?l+d:d,b=this._events[I];if(!b)return[];if(b.fn)return[b.fn];for(var m=0,Z=b.length,c=new Array(Z);m<Z;m++)c[m]=b[m].fn;return c},i.prototype.listenerCount=function(d){var I=l?l+d:d,b=this._events[I];return b?b.fn?1:b.length:0},i.prototype.emit=function(d,I,b,m,Z,c){var i=l?l+d:d;if(!this._events[i])return!1;var X,C,y=this._events[i],V=arguments.length;if(y.fn){switch(y.once&&this.removeListener(d,y.fn,void 0,!0),V){case 1:return y.fn.call(y.context),!0;case 2:return y.fn.call(y.context,I),!0;case 3:return y.fn.call(y.context,I,b),!0;case 4:return y.fn.call(y.context,I,b,m),!0;case 5:return y.fn.call(y.context,I,b,m,Z),!0;case 6:return y.fn.call(y.context,I,b,m,Z,c),!0}for(C=1,X=new Array(V-1);C<V;C++)X[C-1]=arguments[C];y.fn.apply(y.context,X)}else{var W,p=y.length;for(C=0;C<p;C++)switch(y[C].once&&this.removeListener(d,y[C].fn,void 0,!0),V){case 1:y[C].fn.call(y[C].context);break;case 2:y[C].fn.call(y[C].context,I);break;case 3:y[C].fn.call(y[C].context,I,b);break;case 4:y[C].fn.call(y[C].context,I,b,m);break;default:if(!X)for(W=1,X=new Array(V-1);W<V;W++)X[W-1]=arguments[W];y[C].fn.apply(y[C].context,X)}}return!0},i.prototype.on=function(d,I,l){return Z(this,d,I,l,!1)},i.prototype.once=function(d,I,l){return Z(this,d,I,l,!0)},i.prototype.removeListener=function(d,I,b,m){var Z=l?l+d:d;if(!this._events[Z])return this;if(!I)return c(this,Z),this;var i=this._events[Z];if(i.fn)i.fn!==I||m&&!i.once||b&&i.context!==b||c(this,Z);else{for(var X=0,C=[],y=i.length;X<y;X++)(i[X].fn!==I||m&&!i[X].once||b&&i[X].context!==b)&&C.push(i[X]);C.length?this._events[Z]=1===C.length?C[0]:C:c(this,Z)}return this},i.prototype.removeAllListeners=function(d){var I;return d?(I=l?l+d:d,this._events[I]&&c(this,I)):(this._events=new b,this._eventsCount=0),this},i.prototype.off=i.prototype.removeListener,i.prototype.addListener=i.prototype.on,i.prefixed=l,i.EventEmitter=i,d.exports=i}({get exports(){return H},set exports(d){H=d}});var J=H;let t;!function(){if("browser"!==("undefined"!=typeof window&&void 0!==window.document?"browser":"nodejs"))return null;let d=h("");function I(){let I=new J;let l=function(d){try{let I=new Blob([d]),l=window.URL||window.webkitURL;return new Worker(l.createObjectURL(I))}catch(d){m(d)}}(d);if(!l)return m("invalid worker"),null;function b(){let d=function(){let d,I,l=new Promise((function(){d=arguments[0],I=arguments[1]}));return l.resolve=d,l.reject=I,l}(),b=function(){let d=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,I=[],l="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),b=l.length;for(let m=0;m<d;m++)I[m]=l[0|Math.random()*b];return I.join("")}(),m={mode:"call",id:b,fun:"main",input:[...arguments]};return l.postMessage(m),I.once(b,(I=>{"success"===I.state?d.resolve(I.msg):d.reject(I.msg)})),d}function m(d){I.emit("error",d)}return l.onmessage=function(d){!function(d){let l=d,b=l.mode;"emit"!==b&&"return"!==b||("emit"===b&&I.emit(l.evName,l.msg),"return"===b&&I.emit(l.id,l))}(d.data)},l.onerror=m,function(){let d={mode:"init",type:"function",input:[...arguments]};l.postMessage(d)}([...arguments]),I.main=b,I.main=b,I.terminate=function(){l?(l.terminate(),l=void 0):m("worker has been terminated")},I}t=async function(){let d=[...arguments],l=I();return await l.main(...d).finally((()=>{l.terminate()}))}}();var o=t;export{o as default};
