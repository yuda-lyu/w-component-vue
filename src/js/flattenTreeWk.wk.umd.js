const d="function"==typeof Buffer,l="function"==typeof TextDecoder?new TextDecoder:void 0,I=("function"==typeof TextEncoder&&new TextEncoder,Array.prototype.slice.call("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=")),m=(d=>{let l={};return I.forEach(((d,I)=>l[d]=I)),l})(),c=/^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/,Z=String.fromCharCode.bind(String),i="function"==typeof Uint8Array.from?Uint8Array.from.bind(Uint8Array):d=>new Uint8Array(Array.prototype.slice.call(d,0)),b=d=>d.replace(/[^A-Za-z0-9\+\/]/g,""),X=d=>{let l,m,c,Z,i="";const b=d.length%3;for(let b=0;b<d.length;){if((m=d.charCodeAt(b++))>255||(c=d.charCodeAt(b++))>255||(Z=d.charCodeAt(b++))>255)throw new TypeError("invalid character found");l=m<<16|c<<8|Z,i+=I[l>>18&63]+I[l>>12&63]+I[l>>6&63]+I[63&l]}return b?i.slice(0,b-3)+"===".substring(b):i},C=/[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g,y=d=>{switch(d.length){case 4:var l=((7&d.charCodeAt(0))<<18|(63&d.charCodeAt(1))<<12|(63&d.charCodeAt(2))<<6|63&d.charCodeAt(3))-65536;return Z(55296+(l>>>10))+Z(56320+(1023&l));case 3:return Z((15&d.charCodeAt(0))<<12|(63&d.charCodeAt(1))<<6|63&d.charCodeAt(2));default:return Z((31&d.charCodeAt(0))<<6|63&d.charCodeAt(1))}},g=d=>d.replace(C,y),n=d=>{if(d=d.replace(/\s+/g,""),!c.test(d))throw new TypeError("malformed base64.");d+="==".slice(2-(3&d.length));let l,I,i,b="";for(let c=0;c<d.length;)l=m[d.charAt(c++)]<<18|m[d.charAt(c++)]<<12|(I=m[d.charAt(c++)])<<6|(i=m[d.charAt(c++)]),b+=64===I?Z(l>>16&255):64===i?Z(l>>16&255,l>>8&255):Z(l>>16&255,l>>8&255,255&l);return b},W="function"==typeof atob?d=>atob(b(d)):d?d=>Buffer.from(d,"base64").toString("binary"):n,t=d?d=>i(Buffer.from(d,"base64")):d=>i(W(d).split("").map((d=>d.charCodeAt(0)))),p=d?d=>Buffer.from(d,"base64").toString("utf8"):l?d=>l.decode(t(d)):d=>g(W(d)),G=d=>b(d.replace(/[-_]/g,(d=>"-"==d?"+":"/"))),V=d=>p(G(d)),K=V;var o={};!function(d){var l=Object.prototype.hasOwnProperty,I="~";function m(){}function c(d,l,I){this.fn=d,this.context=l,this.once=I||!1}function Z(d,l,m,Z,i){if("function"!=typeof m)throw new TypeError("The listener must be a function");var b=new c(m,Z||d,i),X=I?I+l:l;return d._events[X]?d._events[X].fn?d._events[X]=[d._events[X],b]:d._events[X].push(b):(d._events[X]=b,d._eventsCount++),d}function i(d,l){0==--d._eventsCount?d._events=new m:delete d._events[l]}function b(){this._events=new m,this._eventsCount=0}Object.create&&(m.prototype=Object.create(null),(new m).__proto__||(I=!1)),b.prototype.eventNames=function(){var d,m,c=[];if(0===this._eventsCount)return c;for(m in d=this._events)l.call(d,m)&&c.push(I?m.slice(1):m);return Object.getOwnPropertySymbols?c.concat(Object.getOwnPropertySymbols(d)):c},b.prototype.listeners=function(d){var l=I?I+d:d,m=this._events[l];if(!m)return[];if(m.fn)return[m.fn];for(var c=0,Z=m.length,i=new Array(Z);c<Z;c++)i[c]=m[c].fn;return i},b.prototype.listenerCount=function(d){var l=I?I+d:d,m=this._events[l];return m?m.fn?1:m.length:0},b.prototype.emit=function(d,l,m,c,Z,i){var b=I?I+d:d;if(!this._events[b])return!1;var X,C,y=this._events[b],g=arguments.length;if(y.fn){switch(y.once&&this.removeListener(d,y.fn,void 0,!0),g){case 1:return y.fn.call(y.context),!0;case 2:return y.fn.call(y.context,l),!0;case 3:return y.fn.call(y.context,l,m),!0;case 4:return y.fn.call(y.context,l,m,c),!0;case 5:return y.fn.call(y.context,l,m,c,Z),!0;case 6:return y.fn.call(y.context,l,m,c,Z,i),!0}for(C=1,X=new Array(g-1);C<g;C++)X[C-1]=arguments[C];y.fn.apply(y.context,X)}else{var n,W=y.length;for(C=0;C<W;C++)switch(y[C].once&&this.removeListener(d,y[C].fn,void 0,!0),g){case 1:y[C].fn.call(y[C].context);break;case 2:y[C].fn.call(y[C].context,l);break;case 3:y[C].fn.call(y[C].context,l,m);break;case 4:y[C].fn.call(y[C].context,l,m,c);break;default:if(!X)for(n=1,X=new Array(g-1);n<g;n++)X[n-1]=arguments[n];y[C].fn.apply(y[C].context,X)}}return!0},b.prototype.on=function(d,l,I){return Z(this,d,l,I,!1)},b.prototype.once=function(d,l,I){return Z(this,d,l,I,!0)},b.prototype.removeListener=function(d,l,m,c){var Z=I?I+d:d;if(!this._events[Z])return this;if(!l)return i(this,Z),this;var b=this._events[Z];if(b.fn)b.fn!==l||c&&!b.once||m&&b.context!==m||i(this,Z);else{for(var X=0,C=[],y=b.length;X<y;X++)(b[X].fn!==l||c&&!b[X].once||m&&b[X].context!==m)&&C.push(b[X]);C.length?this._events[Z]=1===C.length?C[0]:C:i(this,Z)}return this},b.prototype.removeAllListeners=function(d){var l;return d?(l=I?I+d:d,this._events[l]&&i(this,l)):(this._events=new m,this._eventsCount=0),this},b.prototype.off=b.prototype.removeListener,b.prototype.addListener=b.prototype.on,b.prefixed=I,b.EventEmitter=b,d.exports=b}({get exports(){return o},set exports(d){o=d}});var J=o;let u;!function(){if("browser"!==("undefined"!=typeof window&&void 0!==window.document?"browser":"nodejs"))return null;let d=K("");function l(){let l=new J;let I=function(d){try{let l=new Blob([d]),I=window.URL||window.webkitURL;return new Worker(I.createObjectURL(l))}catch(d){c(d)}}(d);if(!I)return c("invalid worker"),null;function m(){let d=function(){let d,l,I=new Promise((function(){d=arguments[0],l=arguments[1]}));return I.resolve=d,I.reject=l,I}(),m=function(){let d=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,l=[],I="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),m=I.length;for(let c=0;c<d;c++)l[c]=I[0|Math.random()*m];return l.join("")}(),c={mode:"call",id:m,fun:"main",input:[...arguments]};return I.postMessage(c),l.once(m,(l=>{"success"===l.state?d.resolve(l.msg):d.reject(l.msg)})),d}function c(d){l.emit("error",d)}return I.onmessage=function(d){!function(d){let I=d,m=I.mode;"emit"!==m&&"return"!==m||("emit"===m&&l.emit(I.evName,I.msg),"return"===m&&l.emit(I.id,I))}(d.data)},I.onerror=c,I.onmessageerror=function(d){c(d.data)},function(){let d={mode:"init",type:"function",input:[...arguments]};I.postMessage(d)}([...arguments]),l.main=m,l.main=m,l.terminate=function(){I?(I.terminate(),I=void 0):c("worker has been terminated")},l}u=async function(){let d=[...arguments],I=l();return await I.main(...d).finally((()=>{I.terminate()}))}}();try{process.on("unhandledRejection",(d=>{console.log("outer:unhandledRejection",d)})),process.on("uncaughtException",(d=>{console.log("outer:uncaughtException",d)})),process.on("uncaughtExceptionMonitor",(d=>{console.log("outer:uncaughtExceptionMonitor",d)}))}catch(d){}var H=u;export{H as default};
